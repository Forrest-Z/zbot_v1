<launch>
	<!-- start sensor-->            
	<include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch">
		<arg name="base_name"         value="kinect2"/>
		<arg name="sensor"            value=""/>
		<arg name="publish_tf"        value="true"/>
		<arg name="base_name_tf"      value="kinect2"/>
		<arg name="fps_limit"         value="-1.0"/>
		<arg name="calib_path"        value="$(find kinect2_bridge)/data/"/>
		<arg name="use_png"           value="false"/>
		<arg name="jpeg_quality"      value="90"/>
		<arg name="png_level"         value="1"/>
		<arg name="depth_method"      value="default"/>
		<arg name="depth_device"      value="-1"/>
		<arg name="reg_method"        value="default"/>
		<arg name="reg_device"        value="-1"/>
		<arg name="max_depth"         value="12.0"/>
		<arg name="min_depth"         value="0.1"/>
		<arg name="queue_size"        value="5"/>
		<arg name="bilateral_filter"  value="true"/>
		<arg name="edge_aware_filter" value="true"/>
		<arg name="worker_threads"    value="4"/>
	</include>  
     
  <!-- Run the depthimage_to_laserscan node -->
  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan" output="screen">
  	<!--输入图像-->
    <remap from="image" to="/kinect2/qhd/image_depth_rect"/>
    <!--相关图像的相机信息。通常不需要重新变形，因为camera_info将从与图像相同的命名空间订阅。-->
    <remap from="camera_info" to="/kinect2/qhd/camera_info" />
    <!--输出激光数据的话题-->
    <remap from="scan" to="/scan" /> 
	
		<!--激光扫描的帧id。对于来自具有Z向前的“光学”帧的点云，该值应该被设置为具有X向前和Z向上的相应帧。-->
    <param name="output_frame_id" value="/kinect2_depth_frame"/>
    <!--用于生成激光扫描的像素行数。对于每一列，扫描将返回在图像中垂直居中的那些像素的最小值。-->
    <param name="scan_height" value="30"/>
    <!--返回的最小范围（以米为单位）。小于该范围的输出将作为-Inf输出。-->
    <param name="range_min" value="0.45"/>
    <!--返回的最大范围（以米为单位）。大于此范围将输出为+ Inf。-->
    <param name="range_max" value="8.00"/>
  </node>
  
  
  
</launch>
